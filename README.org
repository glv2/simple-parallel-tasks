#+TITLE: simple-parallel-tasks

This is a simple Common Lisp library to evaluate some forms in parallel.

* API

#+BEGIN_SRC lisp
(defmacro plist (&rest forms))
#+END_SRC

Evaluate /forms/ in parallel and return the results in a list.

#+BEGIN_SRC lisp
(defmacro pvalues (&rest forms))
#+END_SRC

Evaluate /forms/ in parallel and return the results as multiple values.

#+BEGIN_SRC lisp
(defmacro plet (bindings &body body))
#+END_SRC

Like /let/, but the /bindings/ are evaluated in parallel.

* Examples

#+BEGIN_SRC lisp
(time (simple-parallel-tasks:plist 1 (+ 4 5) (sleep 2) 8 (sleep 1) (/ 3 5)))

Evaluation took:
  2.004 seconds of real time

(1 9 NIL 8 NIL 3/5)
#+END_SRC

#+BEGIN_SRC lisp
(time (simple-parallel-tasks:pvalues 1 (+ 4 5) (sleep 2) 8 (sleep 1) (/ 3 5)))

Evaluation took:
  2.007 seconds of real time

1
9
NIL
8
NIL
3/5
#+END_SRC

#+BEGIN_SRC lisp
(time (simple-parallel-tasks:plet ((x (sleep 2))
                                   (y (+ 3 4))
                                   a
                                   (b (sleep 3))
                                   (z (floor 12 5)))
        (list x y a b z)))

Evaluation took:
  3.0000 seconds of real time

(NIL 7 NIL NIL 2)
#+END_SRC
